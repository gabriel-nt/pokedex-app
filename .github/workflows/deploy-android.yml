name: Android Build & Deploy

on:
  pull_request:
    branches:
      - master
    types: [opened, closed]

jobs:
  add_comment:
    name: 'Add a comment to require a version label'
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == false

    steps:
      - name: Add comment
        uses: mshick/add-pr-comment@v2
        with:
          message: Please set a versioning label of either `major`, `minor`, or `patch` to the pull request.
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: 'Deploy Android'
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    defaults:
      run:
        working-directory: ./android

    steps:
      - name: Checkout to git repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node env
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Set up Ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      - name: Install Ruby dependencies
        run: bundle install

      - name: Install Node dependencies
        run: npm install

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Setup Keystore File
        run: echo "${{secrets.KEYSTORE_FILE}}" | base64 -d > "${{ github.workspace }}/production.keystore"

      - name: Build Android Release
        run: |
          bundle exec fastlane android build_bundle bump_type:"${{ steps.extract_label.outputs.version }}" local_env:false
        env:
          KEYSTORE_FILE: '${{ github.workspace }}/production.keystore'
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS}}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Commit and push version change
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: master
          push_options: --force
          file_pattern: '*.gradle'
          commit_user_name: ${{ github.actor }}
          commit_user_email: ${{ github.actor }}@users.noreply.github.com
          commit_message: 'chore: update version code and version name'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: assets
          path: |
            ${{ github.workspace }}/android/app/build/outputs/bundle/release

  release:
    name: 'Create Git Release'
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout to git repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node env
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Git config
        run: |
          git config --global user.email "${{ secrets.GH_ORG_EMAIL }}"
          git config --global user.name "${{ secrets.GH_ORG_NAME }}"

      - name: Extract label version
        id: extract_label
        run: |
          VERSION=${{contains(github.event.pull_request.labels.*.name, 'major') == true && 'major' || contains(github.event.pull_request.labels.*.name, 'minor') == true && 'minor' || contains(github.event.pull_request.labels.*.name, 'patch') == true && 'patch'}}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Increment package version
        run: |
          npm version ${{ steps.extract_label.outputs.version }} -m "chore: update package version"

      - name: Git push version bump
        run: git push origin master --follow-tags --force

      - name: Get package version
        id: get_package_version
        run: |
          VERSION=$(npm pkg get version | tr -d \")
          echo "version=v${VERSION}" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: assets
          path: ${{ github.workspace }}/android/app/build/outputs/bundle/release

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ${{ github.workspace }}/android/app/build/outputs/bundle/release

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'release.tar.gz,foo/*.txt'
          bodyFile: 'body.md'
          tag: ${{ steps.get_package_version.outputs.version }}
          generateReleaseNotes: true
          draft: true
